subtract <- function(first.arg, second.arg=3) {
return(first.arg - second.arg)
}
subtract(5,1)
subtract(5)
subtract(second.arg=10, first.arg=100)
for (i in 1:10) {
print(i)
}
1
5
c(4, 5, 3)
c(4, 5, 3, c(3,2,1))
c(TRUE, FALSE)
c("asdf", "cow")
c("cow", 1)
c(TRUE, 1, "cow")
c(TRUE, 1)
TRUE + TRUE
x <- c(4,3,2,1)
x
x[3]
1:5
1:5 + 1:5
1:5 + 1:4
1:8 + 1:4
subtract(c(100, 10))
x <- data.frame(col.one=c(1,2,3,4,5), col.two=6:10)
x
x[1, ]
x[, 2]
x[[2]]
x$col.two
x$col.two[2]
x$col.two[c(2, 4)]
x$col.two[c(TRUE, F, F, F, F)]
x$col.two > 8
x$col.two[x$col.two > 8]
help(mean)
rm(list=ls())
ell <- read.csv("ell.csv")
str(ell)
ell <- read.csv("ell.csv", as.is=TRUE,
skip=6)
names(ell)
ell <- read.csv("ell.csv", as.is=TRUE,
skip=6, check.names=FALSE)
ell <- read.csv("ell.csv", as.is=TRUE,
names(ell)
head(ell)
ell <- read.csv("ell.csv", as.is=TRUE,
skip=6, check.names=FALSE,
na.strings="s")
table(ell$Grade)
table(ell$Category)
subset(ell, ell$Category=="ELLs")
subset(ell, Category=="ELLs")
ell[ell$Category=="ELLs",]
ell[ell$Category=="ELLs","Category"]
ell[ell$Category=="ELLs","Category"] <- "ELL"
ell[45630,]
table(ell$Grade)
table(ell$Category)
stopifnot(all(ell$Category %in% c("ELL", "EP")))
stopifnot(all(ell$Category %in% c("asdf", "EP")))
stopifnot(all(ell$Category %in% c("ELL", "EP")))
sapply(ell, function(v){return(sum(is.na(v)))})
names(ell)
names(ell)[7:16]
ell[, 7:16]
lapply(ell[, 7:16], is.na)
x <- as.data.frame(lapply(ell[, 7:16], is.na))
str(x)
rowSums(as.data.frame(lapply(ell[, 7:16], is.na)))
table(rowSums(as.data.frame(lapply(ell[, 7:16], is.na))))
ell[rowSums(as.data.frame(lapply(ell[, 7:16], is.na)))==2,]
ell[c(45615, 45627), 15] <- 64
ell[c(45615, 45627), 16] <- 100
stopifnot(all(rowSums(as.data.frame(lapply(ell[, 7:16], is.na))) %in% c(0, 10)))
head(ell[[15]])
names(ell)
head(ell[[15]] / ell[[5]])
head(ell[[16]])
head(100*ell[[15]] / ell[[5]])
head(100*ell[[15]] / ell[[5]] - ell[[16]])
head(abs(100*ell[[15]] / ell[[5]] - ell[[16]]))
hist(abs(100*ell[[15]] / ell[[5]] - ell[[16]]))
(sum(100*ell[[15]] / ell[[5]] - ell[[16]]) < 0)
sum(100*ell[[15]] / ell[[5]] - ell[[16]]) < 0, na.rm=T)
sum(100*ell[[15]] / ell[[5]] - ell[[16]] < 0, na.rm=T)
sum(100*ell[[15]] / ell[[5]] - ell[[16]] > 0, na.rm=T)
head(abs(100*ell[[15]] / ell[[5]] - ell[[16]] > 0))
head(abs(100*ell[[15]] / ell[[5]] - ell[[16]]))
head(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) < 0.05)
all(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) < 0.05 %in% c(TRUE, NA)
)
all(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) <= 0.05 %in% c(TRUE, NA))
NA %in% c(0, NA)
ell[!(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) <= 0.05 %in% c(TRUE, NA)), ]
sum(!(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) <= 0.05 %in% c(TRUE, NA)))
sum(!(abs(100*ell[[15]] / ell[[5]] - ell[[16]]) <= 0.05 %in% c(TRUE, NA)), na.rm=T)
stopifnot(TRUE)
stopifnot(FALSE)
head(duplicated(c(1,2,1,1)))
head(duplicated(ell[, 1:4])
)
head(!duplicated(ell[, 1:4]))
all(!duplicated(ell[, 1:4]))
stopifnot(all(!duplicated(ell[, 1:4])))
gender <- read.csv("gender.csv", as.is=TRUE,
skip=6, check.names=FALSE,
na.strings="s")
names(gender)
stopifnot(all(!duplicated(gender[, 1:4])))
10:1
head(gender[duplicated(gender[, 1:4]) |
rev(duplicated(gender[nrow(gender):1,1:4))]))], 20)
head(gender[duplicated(gender[, 1:4]) |
rev(duplicated(gender[nrow(gender):1,1:4))])), ] 20)
head(gender[duplicated(gender[, 1:4]) |
rev(duplicated(gender[nrow(gender):1,1:4))])), ], 20)
head(gender[duplicated(gender[, 1:4]) |
rev(duplicated(gender[nrow(gender):1,1:4])), ], 20)
head(gender[duplicated(gender[, 1:4]) |
rev(duplicated(gender[nrow(gender):1,1:4])), 1:6], 20)
savehistory("~/clean_data_with_R/live_coding.Rhistory")
